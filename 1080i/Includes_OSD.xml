<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <include name="OSDVisualisation">
        <control type="visualisation" id="2">
            <description>visualisation</description>
            <posx>0</posx>
            <posy>0</posy>
            <width>1920</width>
            <height>1080</height>
        </control>
    </include>
    <include name="OSDFwRwLabel">
        <posx>1742</posx>
        <posy>79</posy>
        <width>150</width>
        <height>34</height>
        <font>Font-Condensed-S34</font>
        <textcolor>aawhite</textcolor>
        <align>right</align>
        <scroll>false</scroll>
    </include>
    <include name="OSDDefaultControlPlay">
        <defaultcontrol>3</defaultcontrol>
    </include>
    <include name="OSDDefaultControlSubtitles">
        <defaultcontrol>7</defaultcontrol>
    </include>
    <include name="OSDDefaultControlLiveTV">
        <defaultcontrol>1</defaultcontrol>
    </include>
    <variable name="GameOSDButtonLabel">
        <!-- Video filter  -->
        <value condition="Control.HasFocus(1)">$LOCALIZE[35225]</value>
        <!-- Volume -->
        <value condition="Control.HasFocus(2)">$LOCALIZE[13376]</value>
        <!-- Reset -->
        <value condition="Control.HasFocus(3)">$LOCALIZE[13007]</value>
        <!-- Pause playback -->
        <value condition="Control.HasFocus(4) + !Player.Paused">$LOCALIZE[36045]</value>
        <!-- Play -->
        <value condition="Control.HasFocus(4) + Player.Paused">$LOCALIZE[208]</value>
        <!-- Stop playback -->
        <value condition="Control.HasFocus(5)">$LOCALIZE[36044]</value>
        <!-- View mode -->
        <value condition="Control.HasFocus(6)">$LOCALIZE[629]</value>
        <!-- Input setting -->
        <value condition="Control.HasFocus(7)">$LOCALIZE[35223]</value>
    </variable>
    <variable name="MusicOSDButtonLabel">
        <!-- Audio Settings -->
        <value condition="Control.HasFocus(11)">$LOCALIZE[13396]</value>
        <!-- Playlist -->
        <value condition="Control.HasFocus(7)">$LOCALIZE[559]</value>
        <!-- Shuffle -->
        <value condition="Control.HasFocus(12)">$LOCALIZE[191]</value>
        <!-- Repeat -->
        <value condition="Control.HasFocus(10)">$LOCALIZE[486]</value>
        <!-- Repeat one -->
        <value condition="Control.HasFocus(10)">$LOCALIZE[487]</value>
        <!-- Repeat folder -->
        <value condition="Control.HasFocus(10)">$LOCALIZE[488]</value>
        <!-- Skip back -->
        <value condition="Control.HasFocus(1)">$LOCALIZE[31115]</value>
        <!-- Skip forward -->
        <value condition="Control.HasFocus(6)">$LOCALIZE[31116]</value>
        <!-- Fast rewind -->
        <value condition="Control.HasFocus(2)">$LOCALIZE[31119]</value>
        <!-- Fast forward -->
        <value condition="Control.HasFocus(5)">$LOCALIZE[31120]</value>
        <!-- Pause playback -->
        <value condition="Control.HasFocus(3) + !Player.Paused">$LOCALIZE[36045]</value>
        <!-- Play -->
        <value condition="Control.HasFocus(3) + Player.Paused">$LOCALIZE[208]</value>
        <!-- Stop playback -->
        <value condition="Control.HasFocus(4)">$LOCALIZE[36044]</value>
        <!-- Lyrics -->
        <value condition="Control.HasFocus(8)">$LOCALIZE[24013]</value>
        <!-- Visualisation -->
        <value condition="Control.HasFocus(500)">$LOCALIZE[250]</value>
        <!-- Visualisation present list -->
        <value condition="Control.HasFocus(13)">$LOCALIZE[10122]</value>
        <!-- Visualisation settings -->
        <value condition="Control.HasFocus(14)">$LOCALIZE[31122]</value>
    </variable>
    <variable name="VideoOSDButtonLabel">
        <!-- Audio Settings -->
        <value condition="Control.HasFocus(11)">$LOCALIZE[13396]</value>
        <!-- Video Settings -->
        <value condition="Control.HasFocus(12)">$LOCALIZE[13395]</value>
        <!-- Subtitles -->
        <value condition="Control.HasFocus(7)">$LOCALIZE[24133]</value>
        <!-- Record -->
        <value condition="Control.HasFocus(15)">$LOCALIZE[264]</value>
        <!-- Skip back -->
        <value condition="Control.HasFocus(1) + !VideoPlayer.Content(LiveTV)">$LOCALIZE[31115]</value>
        <!-- Previous channel -->
        <value condition="Control.HasFocus(1) + VideoPlayer.Content(LiveTV)">$LOCALIZE[31117]</value>
        <!-- Skip forward -->
        <value condition="Control.HasFocus(6) + !VideoPlayer.Content(LiveTV)">$LOCALIZE[31116]</value>
        <!-- Next channel -->
        <value condition="Control.HasFocus(13) + VideoPlayer.Content(LiveTV)">$LOCALIZE[31118]</value>
        <!-- Fast rewind -->
        <value condition="Control.HasFocus(2)">$LOCALIZE[31119]</value>
        <!-- Fast forward -->
        <value condition="Control.HasFocus(5)">$LOCALIZE[31120]</value>
        <!-- Pause playback -->
        <value condition="Control.HasFocus(3) + !Player.Paused">$LOCALIZE[36045]</value>
        <!-- Play -->
        <value condition="Control.HasFocus(3) + Player.Paused">$LOCALIZE[208]</value>
        <!-- Stop playback -->
        <value condition="Control.HasFocus(4)">$LOCALIZE[36044]</value>
        <!-- Channel list -->
        <value condition="Control.HasFocus(10) + VideoPlayer.Content(LiveTV)">$LOCALIZE[31121]</value>
        <!-- DVD menu -->
        <value condition="Control.HasFocus(10) + !VideoPlayer.Content(LiveTV)">$LOCALIZE[33061]</value>
        <!-- Channel guide -->
        <value condition="Control.HasFocus(8) + VideoPlayer.Content(LiveTV)">$LOCALIZE[19686]</value>
        <!-- Info -->
        <value condition="Control.HasFocus(8) + !VideoPlayer.Content(LiveTV)">$LOCALIZE[19033]</value>
        <!-- Teletext -->
        <value condition="Control.HasFocus(9) + VideoPlayer.Content(LiveTV)">$LOCALIZE[10550]</value>
        <!-- Bookmarks -->
        <value condition="Control.HasFocus(9) + !VideoPlayer.Content(LiveTV)">$LOCALIZE[298]</value>
    </variable>
    <variable name="OSDPlot">
        <value condition="!String.IsEmpty(Window(seekbar).Property(ShowNext))">$INFO[VideoPlayer.NextPlot]</value>
        <value>$INFO[VideoPlayer.Plot]</value>
    </variable>
    <variable name="OSDTitle">
        <value condition="!String.IsEmpty(Window(seekbar).Property(ShowNext))">$INFO[VideoPlayer.NextTitle]</value>
        <value>$INFO[VideoPlayer.Title]</value>
    </variable>
    <variable name="OSDNextTitle">
        <value condition="!String.IsEmpty(Window(seekbar).Property(ShowNext))">$INFO[VideoPlayer.NextStartTime,$LOCALIZE[19080] ,]$INFO[VideoPlayer.NextEndTime, â€¢ $LOCALIZE[19081] ,]</value>
        <value>$INFO[VideoPlayer.NextTitle,$LOCALIZE[19031]: ,]$INFO[VideoPlayer.NextStartTime, (,)]</value>
    </variable>
    <variable name="OSDMusicFanart">
        <value condition="!String.IsEmpty(Player.Art(fanart))">$INFO[Player.Art(fanart)]</value>
        <value condition="String.IsEmpty(Player.Art(fanart)) + !String.IsEmpty(Skin.String(GlobalBackdropSingle))">$INFO[Skin.String(GlobalBackdropSingle)]</value>
        <value>special://skin/extras/backgrounds/01.jpg</value>
    </variable>
    <variable name="Player.FinishTime">
        <value condition="VideoPlayer.HasEpg">$INFO[PVR.EpgEventFinishTime(hh:mm)]</value>
        <value>$INFO[Player.FinishTime(hh:mm)]</value>
    </variable>
    <include name="OSDSeasonInfo">
        <control type="group">
            <visible>!Skin.HasSetting(OSD.HideSeasonInfo)</visible>
            <include>BannerListInfoAnimation</include>
            <visible>[Player.ShowInfo | Player.Seeking | Player.DisplayAfterSeek | Player.Paused | Player.Forwarding | Player.Rewinding | Window.IsActive(videoosd) | Window.IsActive(musicosd) | Window.IsActive(fullscreenvideo)] + !Window.IsActive(script-cu-lrclyrics-main.xml) + VideoPlayer.Content(episodes) </visible>
            <!-- Season 0/Specials -->
            <control type="button">
                <visible>Integer.IsEqual(VideoPlayer.Season,0)</visible>
                <posx>45</posx>
                <posy>0</posy>
                <width>300</width>
                <height>194</height>
                <label>S0$INFO[VideoPlayer.Season]$INFO[VideoPlayer.Episode]</label>
                <font>Font-Condensed-S34</font>
                <disabledcolor>aawhite</disabledcolor>
                <texturefocus></texturefocus>
                <texturenofocus border="150,90,150,90">overlays/volume/back-vf.png</texturenofocus>
                <align>center</align>
                <enable>false</enable>
            </control>
            <control type="group">
                <visible>!Integer.IsEqual(VideoPlayer.Season,0)</visible>
                <!-- Season/EP equal or lower 9 -->
                <control type="button">
                    <visible>Integer.IsLessOrEqual(VideoPlayer.Season,9) + Integer.IsLessOrEqual(VideoPlayer.Episode,9)</visible>
                    <posx>45</posx>
                    <posy>0</posy>
                    <width>300</width>
                    <height>194</height>
                    <label>S0$INFO[VideoPlayer.Season]E0$INFO[VideoPlayer.Episode]</label>
                    <font>Font-Condensed-S34</font>
                    <disabledcolor>aawhite</disabledcolor>
                    <texturefocus></texturefocus>
                    <texturenofocus border="150,90,150,90">overlays/volume/back-vf.png</texturenofocus>
                    <align>center</align>
                    <enable>false</enable>
                </control>
                <!-- Season/EP equal or greater 10 -->
                <control type="button">
                    <visible>Integer.IsGreaterOrEqual(VideoPlayer.Season,10) + Integer.IsGreaterOrEqual(VideoPlayer.Episode,10)</visible>
                    <posx>45</posx>
                    <posy>0</posy>
                    <width>300</width>
                    <height>194</height>
                    <label>S$INFO[VideoPlayer.Season]E$INFO[VideoPlayer.Episode]</label>
                    <font>Font-Condensed-S34</font>
                    <disabledcolor>aawhite</disabledcolor>
                    <texturefocus></texturefocus>
                    <texturenofocus border="150,90,150,90">overlays/volume/back-vf.png</texturenofocus>
                    <align>center</align>
                    <enable>false</enable>
                </control>
                <!-- Season greater 10 - EP less 9 -->
                <control type="button">
                    <visible>Integer.IsGreaterOrEqual(VideoPlayer.Season,10) + Integer.IsLessOrEqual(VideoPlayer.Episode,9)</visible>
                    <posx>45</posx>
                    <posy>0</posy>
                    <width>300</width>
                    <height>194</height>
                    <label>S$INFO[VideoPlayer.Season]E0$INFO[VideoPlayer.Episode]</label>
                    <font>Font-Condensed-S34</font>
                    <disabledcolor>aawhite</disabledcolor>
                    <texturefocus></texturefocus>
                    <texturenofocus border="150,90,150,90">overlays/volume/back-vf.png</texturenofocus>
                    <align>center</align>
                    <enable>false</enable>
                </control>
                <!-- Season less 9 - EP greater 10 -->
                <control type="button">
                    <visible>Integer.IsLessOrEqual(VideoPlayer.Season,9) + Integer.IsGreaterOrEqual(VideoPlayer.Episode,10)</visible>
                    <posx>45</posx>
                    <posy>0</posy>
                    <width>355</width>
                    <height>194</height>
                    <label>S0$INFO[VideoPlayer.Season]E$INFO[VideoPlayer.Episode]</label>
                    <font>Font-Condensed-S34</font>
                    <disabledcolor>aawhite</disabledcolor>
                    <texturefocus></texturefocus>
                    <texturenofocus border="150,90,150,90">overlays/volume/back-vf.png</texturenofocus>
                    <align>center</align>
                    <enable>false</enable>
                </control>
            </control>
        </control>
    </include>    
    <include name="OSDChapterInfo">
        <control type="group">
            <visible>!Skin.HasSetting(OSD.HideChapterInfo)</visible>
            <include>BannerListInfoAnimation</include>
            <visible>[Player.ShowInfo | Player.Seeking | Player.DisplayAfterSeek | Player.Paused | Player.Forwarding | Player.Rewinding | Window.IsActive(videoosd) | Window.IsActive(musicosd) | Window.IsActive(fullscreenvideo)] + !Window.IsActive(script-cu-lrclyrics-main.xml) + !String.IsEmpty(Player.Chapter) + Integer.IsGreater(Player.ChapterCount,0) +  VideoPlayer.Content(movies) </visible>
            <control type="button">
                <posx>45</posx>
                <posy>0</posy>
                <width>355</width>
                <height>194</height>
                <label>$INFO[Player.Chapter,$LOCALIZE[21396] , / ]$INFO[Player.ChapterCount]</label>
                <font>Font-Condensed-S34</font>
                <disabledcolor>aawhite</disabledcolor>
                <texturefocus></texturefocus>
                <texturenofocus border="150,90,150,90">overlays/volume/back-vf.png</texturenofocus>
                <align>center</align>
                <enable>false</enable>
            </control>
        </control>
    </include>
    <include name="OSDWeatherClockPVR">
        <control type="group">
            <visible>!Window.IsActive(videoosd) + !Window.IsActive(musicosd)</visible>
            <animation effect="slide" end="70" time="300" tween="sine" easing="inout" condition="!Weather.IsFetched | [String.IsEqual(Weather.FanartCode,na) + String.Contains(Weather.Conditions,/)]">Conditional</animation>
            <control type="label">
                <description>Clock</description>
                <posx>1704</posx>
                <posy>170</posy>
                <width>680</width>
                <height>38</height>
                <align>right</align>
                <textoffsetx>30</textoffsetx>
                <label>$INFO[System.Time]</label>
                <font>Font-Condensed-S34-B</font>
                <textcolor>bbwhite</textcolor>
                <shadowcolor>22000000</shadowcolor>
            </control>
            <control type="image">
                <description>Small weather</description>
                <posx>1664</posx>
                <posy>132</posy>
                <width>100</width>
                <height>100</height>
                <colordiffuse>bbwhite</colordiffuse>
                <texture>weather/small/$INFO[Weather.FanartCode].png</texture>
                <visible>Weather.IsFetched + ![String.IsEqual(Weather.FanartCode,na) + String.Contains(Weather.Conditions,/)]</visible>
                <include>visiblehidefadeinfo</include>
            </control>
        </control>
    </include>
    <include name="OSDWeatherClock">
        <control type="group">
            <animation effect="slide" end="-92" time="300" tween="sine" easing="inout" condition="Player.Muted | String.Contains(Player.Volume,-60.0)">Conditional</animation>
            <animation effect="slide" end="-204" time="300" tween="sine" easing="inout" condition="!Player.Muted + Window.IsVisible(volumebar) + !Player.Passthrough">Conditional</animation>
            <animation effect="slide" end="-454" time="300" tween="sine" easing="inout" condition="!Player.Muted + Window.IsVisible(volumebar) + Player.Passthrough">Conditional</animation>
            <include condition="Window.IsActive(fullscreenvideo)">BannerListInfoAnimation</include>
            <include condition="!Window.IsActive(fullscreenvideo)">BannerListInfoAnimationMusicOSD</include>
            <visible>[Player.ShowInfo | Player.Seeking | Player.DisplayAfterSeek | Player.Paused | Player.Forwarding | Player.Rewinding | Window.IsActive(videoosd) | Window.IsActive(musicosd) | Window.IsActive(fullscreenvideo)] + !Window.IsActive(script-cu-lrclyrics-main.xml)</visible>
            <animation type="Conditional" condition="Window.IsActive(notification)">
                <effect type="fade" start="100" end="8" tween="sine" easing="out" time="300" />
                <effect type="zoom" start="100" end="50" center="1569,97" tween="sine" easing="inout" time="300" />
            </animation>
            <!-- Weather -->
            <!-- Weather ONLY Background -->
            <control type="image">
                <posx>1578</posx>
                <posy>0</posy>
                <width>300</width>
                <height>194</height>
                <texture>osd/fullscreen/osd-back-weatheronly.png</texture>
                <aspectratio>stretch</aspectratio>
                <visible>!Skin.HasSetting(OSD.HideWeather) + Skin.HasSetting(OSD.HideClock) + Weather.IsFetched</visible>
            </control>
            <!-- Weather ONLY Label -->
            <control type="group">
                <visible>!Skin.HasSetting(OSD.HideWeather) + Skin.HasSetting(OSD.HideClock) + ![String.IsEqual(Weather.FanartCode,na) + String.Contains(Weather.Conditions,/)]</visible>
                <include>visiblehidefadeinfo</include>
                <control type="image">
                    <description>Small weather</description>
                    <posx>1723</posx>
                    <posy>47</posy>
                    <width>100</width>
                    <height>100</height>
                    <colordiffuse>aawhite</colordiffuse>
                    <texture>$INFO[Weather.FanartCode,weather/small/,.png]</texture>
                </control>
                <control type="label">
                    <description>Temp label</description>
                    <posx>1743</posx>
                    <posy>79</posy>
                    <width>75</width>
                    <height>34</height>
                    <label>$INFO[Weather.Temperature]</label>
                    <font>Font-Condensed-S34</font>
                    <textcolor>aawhite</textcolor>
                    <align>right</align>
                    <scroll>false</scroll>
                    <visible>Weather.IsFetched</visible>
                </control>
            </control>
            <!-- Weather ONLY loading -->
            <control type="group">
                <visible>!Skin.HasSetting(OSD.HideWeather) + Skin.HasSetting(OSD.HideClock) + String.IsEqual(Weather.FanartCode,na) + String.Contains(Weather.Conditions,/)</visible>
                <include>visiblehidefadeinfo</include>
                <control type="image">
                    <description>Weather loading background</description>
                    <posx>1683</posx>
                    <posy>47</posy>
                    <width>100</width>
                    <height>100</height>
                    <texture>osd/fullscreen/weather-loading-back.png</texture>
                </control>
                <control type="image">
                    <description>Weather loading indicator</description>
                    <posx>1683</posx>
                    <posy>47</posy>
                    <width>100</width>
                    <height>100</height>
                    <texture>osd/fullscreen/weather-loading.png</texture>
                    <animation effect="rotate" center="auto" start="360" end="0" time="1000" loop="true" condition="String.IsEqual(Weather.FanartCode,na) + String.Contains(Weather.Conditions,/)">Conditional</animation>
                </control>
            </control>
            <!-- Clock -->
            <!-- Clock Background -->
            <control type="image">
                <posx>1218</posx>
                <posy>0</posy>
                <width>702</width>
                <height>194</height>
                <texture>osd/fullscreen/osd-back-clock.png</texture>
                <aspectratio>stretch</aspectratio>
                <visible>Skin.HasSetting(OSD.HideWeather) + !Skin.HasSetting(OSD.HideClock) | !Skin.HasSetting(OSD.HideWeather) + !Weather.IsFetched</visible>
            </control>
            <!-- Weather and Clock Background -->
            <control type="image">
                <posx>1218</posx>
                <posy>0</posy>
                <width>702</width>
                <height>194</height>
                <texture>osd/fullscreen/osd-back-weatherclock.png</texture>
                <aspectratio>stretch</aspectratio>
                <visible>!Skin.HasSetting(OSD.HideWeather) + !Skin.HasSetting(OSD.HideClock) + Weather.IsFetched</visible>
            </control>
            <!-- Weather Label -->
            <control type="group">
                <visible>!Skin.HasSetting(OSD.HideWeather) + !Skin.HasSetting(OSD.HideClock) + ![String.IsEqual(Weather.FanartCode,na) + String.Contains(Weather.Conditions,/)] + Weather.IsFetched</visible>
                <include>visiblehidefadeinfo</include>
                <control type="image">
                    <description>Small weather</description>
                    <posx>1398</posx>
                    <posy>47</posy>
                    <width>100</width>
                    <height>100</height>
                    <colordiffuse>aawhite</colordiffuse>
                    <texture>$INFO[Weather.FanartCode,weather/small/,.png]</texture>
                </control>
                <control type="label">
                    <description>Temp label</description>
                    <posx>1408</posx>
                    <posy>79</posy>
                    <width>75</width>
                    <height>34</height>
                    <label>$INFO[Weather.Temperature]</label>
                    <font>Font-Condensed-S34</font>
                    <textcolor>aawhite</textcolor>
                    <align>right</align>
                    <scroll>false</scroll>
                    <visible>Weather.IsFetched</visible>
                </control>
            </control>
            <control type="group">
                <visible>!Skin.HasSetting(OSD.HideWeather) + !Skin.HasSetting(OSD.HideClock) + String.IsEqual(Weather.FanartCode,na) + String.Contains(Weather.Conditions,/)</visible>
                <include>visiblehidefadeinfo</include>
                <control type="image">
                    <description>Weather loading background</description>
                    <posx>1353</posx>
                    <posy>47</posy>
                    <width>100</width>
                    <height>100</height>
                    <texture>osd/fullscreen/weather-loading-back.png</texture>
                </control>
                <control type="image">
                    <description>Weather loading indicator</description>
                    <posx>1353</posx>
                    <posy>47</posy>
                    <width>100</width>
                    <height>100</height>
                    <texture>osd/fullscreen/weather-loading.png</texture>
                    <animation effect="rotate" center="auto" start="360" end="0" time="1000" loop="true" condition="String.IsEqual(Weather.FanartCode,na) + String.Contains(Weather.Conditions,/)">Conditional</animation>
                </control>
            </control>
            <!--  -->
            <!-- Clock -->
            <control type="image">
                <description>Clock image</description>
                <posx>1563</posx>
                <posy>47</posy>
                <width>100</width>
                <height>100</height>
                <texture>osd/fullscreen/clock.png</texture>
                <visible>!Skin.HasSetting(OSD.HideClock) + !Control.IsVisible(24)</visible>
            </control>
            <control type="image" id="24">
                <description>Clock image</description>
                <posx>1563</posx>
                <posy>47</posy>
                <width>100</width>
                <height>100</height>
                <texture>osd/fullscreen/clock-pm.png</texture>
                <visible>!Skin.HasSetting(OSD.HideClock) + String.EndsWith(System.Time,Pm)</visible>
            </control>
            <control type="label">
                <visible>!Skin.HasSetting(OSD.HideClock)</visible>
                <description>Clock label</description>
                <posx>1575</posx>
                <posy>79</posy>
                <width>150</width>
                <height>34</height>
                <label>$INFO[System.Time(hh)]:$INFO[System.Time(mm)]</label>
                <font>Font-Condensed-S34</font>
                <textcolor>aawhite</textcolor>
                <align>right</align>
                <scroll>false</scroll>
            </control>
            <control type="group">
                <description>Finish Time</description>
                <visible>!Skin.HasSetting(OSD.HideClock) + !Player.Forwarding + !Player.Rewinding</visible>
                <include>visiblehidefadeinfo</include>
                <control type="image">
                    <posx>1730</posx>
                    <posy>47</posy>
                    <width>100</width>
                    <height>100</height>
                    <texture>osd/fullscreen/clock-finish.png</texture>
                </control>
                <control type="label">
                    <posx>1742</posx>
                    <posy>79</posy>
                    <width>150</width>
                    <height>34</height>
                    <label>$VAR[Player.FinishTime]</label>
                    <font>Font-Condensed-S34</font>
                    <textcolor>aawhite</textcolor>
                    <align>right</align>
                    <scroll>false</scroll>
                </control>
            </control>
            <!--  -->
            <control type="group">
                <visible>Player.Forwarding | Player.Rewinding</visible>
                <include>visiblehidefadeinfo</include>
                <control type="image">
                    <description>Forwarding image</description>
                    <posx>1730</posx>
                    <posy>47</posy>
                    <width>100</width>
                    <height>100</height>
                    <texture>osd/fullscreen/fw.png</texture>
                    <visible>Player.Forwarding</visible>
                </control>
                <control type="image">
                    <description>Rewinding image</description>
                    <posx>1730</posx>
                    <posy>47</posy>
                    <width>100</width>
                    <height>100</height>
                    <texture>osd/fullscreen/rw.png</texture>
                    <visible>Player.Rewinding</visible>
                </control>
                <control type="label">
                    <description>Forwarding / Rewinding 2x</description>
                    <include>OSDFwRwLabel</include>
                    <label>2x</label>
                    <visible>Player.Forwarding2x | Player.Rewinding2x</visible>
                </control>
                <control type="label">
                    <description>Forwarding / Rewinding 4x</description>
                    <include>OSDFwRwLabel</include>
                    <label>4x</label>
                    <visible>Player.Forwarding4x | Player.Rewinding4x</visible>
                </control>
                <control type="label">
                    <description>Forwarding / Rewinding 8x</description>
                    <include>OSDFwRwLabel</include>
                    <label>8x</label>
                    <visible>Player.Forwarding8x | Player.Rewinding8x</visible>
                </control>
                <control type="label">
                    <description>Forwarding / Rewinding 16x</description>
                    <include>OSDFwRwLabel</include>
                    <label>16x</label>
                    <visible>Player.Forwarding16x | Player.Rewinding16x</visible>
                </control>
                <control type="label">
                    <description>Forwarding / Rewinding 32x</description>
                    <include>OSDFwRwLabel</include>
                    <label>32x</label>
                    <visible>Player.Forwarding32x | Player.Rewinding32x</visible>
                </control>
            </control>
        </control>
    </include>
</includes>